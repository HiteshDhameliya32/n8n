{
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -500,
        -60
      ],
      "id": "3c09d83d-a4d0-47c3-ae9f-cac823ee481f",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg",
          "mode": "list",
          "cachedResultName": "patiants list",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -320,
        -60
      ],
      "id": "9cb7991e-ce16-47ea-bc41-2a1b3b011488",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "5ewVvwFTLDlJ7YzJ",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const today = new Date();\n\nreturn items.filter(item => {\n  const data = item.json;\n\n  const dischargeDate = new Date(data.start_date);\n  const followUpDays = Number(data[\"Follow_up_duration(days)\"]);\n\n  // Calculate how many days since discharge\n  const daysSinceDischarge = Math.floor((today - dischargeDate) / (1000 * 60 * 60 * 24));\n\n  // Conditions:\n  // - Patient already discharged (no future dates, no today)\n  // - Still within follow-up window\n  return daysSinceDischarge > 0 && daysSinceDischarge <= followUpDays;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -140,
        -60
      ],
      "id": "5b20db41-6287-48f5-8051-3440b47d1ccf",
      "name": "Code"
    },
    {
      "parameters": {
        "chatId": "5443133930",
        "text": "=Hello {{ $('Code').item.json.Name }}\n\nWe hope your recovery is going smoothly and that you're feeling a little better today. 💛\n\nIf you're feeling any pain, discomfort, or have *any concerns at all*, please don’t hesitate to reach out.  \nWe're here to support you — just reply to this message, and we’ll get back to you as soon as possible. \n\nyou are free to tell us what are you feeling!\n\nTake it easy, rest well, and remember healing takes time. You've got this. 💪\n\n– Your Care Team",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        60,
        -60
      ],
      "id": "99e71803-8a2d-44da-b2ee-c45d171bb308",
      "name": "Send a text message",
      "webhookId": "d5cadf8a-0ede-47f9-8b44-c71ae6488eb5",
      "credentials": {
        "telegramApi": {
          "id": "QpkbaVk6M2l95xNC",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -640,
        360
      ],
      "id": "c16c414f-9b70-42b8-86e4-11ab0f2be60d",
      "name": "Telegram Trigger",
      "webhookId": "04587793-4c97-4339-9228-fbf35b16afa8",
      "credentials": {
        "telegramApi": {
          "id": "QpkbaVk6M2l95xNC",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a medical assistant AI. Your task is to expand vague or short post-surgery patient messages into clear, medically useful summaries for doctors and triage systems.\n\nYou will receive:\n- Patient name: {{ $json.first_name }}\n- Patient message: \"{{ $json.message.text }}\"\n\n⚠️ You will not be given the patient's full medical history. Do not assume or invent it.\n\nWrite a 2–4 sentence summary that:\n\n1. Clearly restates what the patient said\n2. Connects their message **only** to the given surgery type\n3. Expands the patient's message with clarity and plain language\n4. Relates the symptoms, if any, to the typical post-operative expectations of that surgery\n5. Do not assume or fabricate any health history beyond the surgery provided\n6. Do not diagnose or recommend anything — just provide a clear explanation of what the patient is reporting\n7. If the message contains no health concern, note that clearly, but acknowledge the patient is responsive\n\nFinal output should help a triage system understand the message without guessing or over-interpreting it. Focus only on what is explicitly said and the given surgery.\n",
        "options": {
          "systemMessage": "check the google sheet for patients surgery type in column Surgery_Name\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -140,
        360
      ],
      "id": "6bb49f4d-9fe7-4b5c-a00b-3e88ba9fad9d",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -200,
        580
      ],
      "id": "e30874bd-cb7d-4819-bafc-519151f38e93",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "0qx7MVBn4PpeYK6I",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2c05b155-7263-491b-8f0c-b3c07cb56f19",
              "leftValue": "={{ $json.status }}",
              "rightValue": "read",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        760,
        340
      ],
      "id": "32395867-bcf4-4f4f-953a-576e273eb6a8",
      "name": "If"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a compassionate medical assistant following up with a post-surgery patient.\n\nThe patient visited for: check google sheet\nThey just sent this message: “{{ $('Edit Fields').item.json.message.text }}”\npatient name: {{ $('Edit Fields').item.json.first_name }}\n\nBased on this, write a short, kind response for a low-intensity concern that:\n\nReassures the patient that their mild symptom is typical after whatever the reason\n\nEncourages them to continue recovery as advised\n\nReminds them to contact the care team if things get worse\n\nUses a warm, friendly, human tone (no medical jargon)\n\nKeep the reply brief: 2–4 sentences.",
        "options": {
          "systemMessage": "you have to check for patients details from google sheet "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1340,
        820
      ],
      "id": "74fe8360-bb67-467b-bfc3-08bbe00da59f",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "jsCode": "// This function expects input like:\n// status: read\\nintensity: moderate\n\nconst output = $json[\"output\"]; // The raw message from AI, e.g., status: read\\nintensity: moderate\nconst lines = output.split('\\n');\n\nlet result = {};\n\nfor (const line of lines) {\n  const [key, value] = line.split(':').map(s => s.trim());\n  if (key && value) {\n    result[key] = value;\n  }\n}\n\nreturn [{ json: result }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        360
      ],
      "id": "7bc4675e-6bcb-43db-8f37-5b83fa036b97",
      "name": "Code1"
    },
    {
      "parameters": {
        "chatId": "5443133930",
        "text": "That's wonderful to hear! 😊 We're glad you're feeling better. Keep resting and take things at your own pace — healing is a journey, and you're doing great!  If anything changes or you have any questions at all, just reply to this message. We're always here for you.  – Your Care Team 💛",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        920,
        600
      ],
      "id": "6e8e8e3e-8a7e-490d-a79d-f05d72245f17",
      "name": "feedback msg",
      "webhookId": "d52c8c16-d67c-4ba5-a035-2b33e2b6a739",
      "credentials": {
        "telegramApi": {
          "id": "QpkbaVk6M2l95xNC",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1300,
        1040
      ],
      "id": "02fb4e0c-7a32-4f5e-a32e-90400ac2e1b2",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "0qx7MVBn4PpeYK6I",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg",
          "mode": "list",
          "cachedResultName": "patiants list",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        1460,
        1040
      ],
      "id": "1bd6c1aa-6417-4be9-bf46-22d3c2879780",
      "name": "Get row(s) in sheet in Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "5ewVvwFTLDlJ7YzJ",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a helpful and empathetic virtual assistant working with a post-surgery care team.\n\nThe patient recently had: check google sheet\nTheir message: \"{{ $json.message.text }}\"  \nPatient name (if available): {{ $json.name }}\n\nThis message has been classified as **moderate intensity**, meaning the patient may be experiencing mild to moderate discomfort or symptoms.\n\nYour job is to:\n- Acknowledge the symptom(s) without alarming the patient.\n- Express care and support.\n- Reassure them that their message will be reviewed by the care team shortly.\n- Keep the message clear, warm, and no more than 2–4 sentences.\n\nDo **not** provide a medical diagnosis or instructions beyond general reassurance.\n\nOutput only the message to be sent to the patient.\n",
        "options": {
          "systemMessage": "you have to check for patients details from google sheet "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1660,
        300
      ],
      "id": "08dc8c5a-d1c5-4676-a8a6-7bd6302de8c3",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1620,
        520
      ],
      "id": "672314b7-c1d0-4c2a-b43b-a3d80b9bcd72",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "0qx7MVBn4PpeYK6I",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg",
          "mode": "list",
          "cachedResultName": "patiants list",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        1820,
        560
      ],
      "id": "d11bc670-b952-468f-a799-3e2471f71371",
      "name": "Get row(s) in sheet in Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "5ewVvwFTLDlJ7YzJ",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a compassionate and professional virtual assistant working with a post-surgery care team.\n\nThe patient recently had: check google sheet\nTheir message: \"{{ $('Edit Fields').item.json.message.text }}\"  \nPatient name: {{ $('Edit Fields').item.json.first_name }}\n\nThis message has been classified as **high intensity**, indicating the patient may be experiencing serious symptoms or complications.\n\nYour job is to:\n- Respond with urgency and care.\n- Reassure the patient that their message has been prioritized.\n- Let them know the medical team is being alerted right away.\n- Maintain a calm and professional tone.\n- Limit the response to 2–4 sentences.\n\nDo **not** provide a diagnosis. Do **not** tell the patient to wait too long if it’s serious.\n\nOutput only the message to be sent to the patient.\n",
        "options": {
          "systemMessage": "you have to check for patients details from google sheet "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1960,
        -280
      ],
      "id": "5e288c17-1e63-40d7-9cb6-12d6f0d46f02",
      "name": "AI Agent3"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1920,
        -60
      ],
      "id": "c8450ee5-91c8-4bc7-ab7c-b31c1d3ade6e",
      "name": "Google Gemini Chat Model3",
      "credentials": {
        "googlePalmApi": {
          "id": "0qx7MVBn4PpeYK6I",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg",
          "mode": "list",
          "cachedResultName": "patiants list",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        2120,
        -20
      ],
      "id": "d3e27cd1-ae78-4529-89b8-f869bcd5aec1",
      "name": "Get row(s) in sheet in Google Sheets2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "5ewVvwFTLDlJ7YzJ",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b81ebcd5-33dd-4dca-b637-197332db043e",
              "name": "first_name",
              "value": "={{ $json.message.chat.first_name }}",
              "type": "string"
            },
            {
              "id": "492ec819-3fd1-4e10-b4b3-e95898c6202c",
              "name": "message.text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            },
            {
              "id": "4ca233f3-7453-45fe-a2b9-50bebe548dac",
              "name": "message.chat.id",
              "value": "={{ $json.message.chat.id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -420,
        360
      ],
      "id": "5c233476-748a-485c-a4d3-1eb4847f76aa",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.intensity }}",
                    "rightValue": "high",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "6b06de34-d361-4279-a019-c4bad35695c3"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "high"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c3eb48be-2f33-46c8-a367-a678be89a3df",
                    "leftValue": "={{ $json.intensity }}",
                    "rightValue": "moderate",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "moderate"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b7c5475c-4d90-43b4-a42c-9b95b060b809",
                    "leftValue": "={{ $json.intensity }}",
                    "rightValue": "low",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "low"
            }
          ]
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1040,
        220
      ],
      "id": "29b7eff8-2a5d-4c7c-bb54-26bbdb9e99de",
      "name": "Switch"
    },
    {
      "parameters": {
        "chatId": "5443133930",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2040,
        300
      ],
      "id": "e4ed967b-7fd4-4a56-8b11-376743c3d500",
      "name": "Send a text message2",
      "webhookId": "42724737-5de7-41e4-98d8-e2b09af5c6fa",
      "credentials": {
        "telegramApi": {
          "id": "QpkbaVk6M2l95xNC",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "5443133930",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2300,
        -280
      ],
      "id": "88a98ac3-e870-4277-ab37-ac87da8367c5",
      "name": "Send a text message3",
      "webhookId": "42724737-5de7-41e4-98d8-e2b09af5c6fa",
      "credentials": {
        "telegramApi": {
          "id": "QpkbaVk6M2l95xNC",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "5443133930",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1740,
        820
      ],
      "id": "40460acd-7304-4544-bacc-188ff40501a7",
      "name": "Send a text message4",
      "webhookId": "42724737-5de7-41e4-98d8-e2b09af5c6fa",
      "credentials": {
        "telegramApi": {
          "id": "QpkbaVk6M2l95xNC",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg",
          "mode": "list",
          "cachedResultName": "patiants list",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        0,
        620
      ],
      "id": "46a159a8-16a5-4395-9fda-aa54b558f1c5",
      "name": "Get row(s) in sheet in Google Sheets3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "5ewVvwFTLDlJ7YzJ",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a medical message triage assistant. You will be given detailed explanation of patient's state. Your job is to decide whether a human care team needs to read the message or not.\n\nsummary: {{ $json.output }}\n\nClassify each patient message into one of the following:\n\nStatus:\n\n\"read\" – if the patient mentions any symptoms, pain (even mild), discomfort, medication issue, temperature change (hot/cold), swelling, unusual feelings, wound concerns, or anything that may require monitoring.\n\n\"ignore\" – if the patient gives only positive, reassuring updates like feeling fine, healing well, no problems, etc.\n\nIf the status is \"read\", also include:\n\nintensity:\n\nlow – minor or occasional discomfort, mild pain, or temporary symptoms that do not sound urgent or worrying.\n\nmoderate – symptoms that are persistent, noticeable, or could affect healing (e.g., swelling, ongoing pain, medication confusion).\n\nhigh – urgent or severe symptoms that may need immediate care, such as sharp pain, high fever, heavy bleeding, signs of infection, etc.\n\nYour response format should be:\n\nstatus: read\nintensity: moderate\nOr:\n\nstatus: ignore",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        220,
        360
      ],
      "id": "e9ba961e-891a-40cb-beb7-2a63cadfbd5d",
      "name": "AI Agent4"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        220,
        540
      ],
      "id": "8ab879ea-f8ac-4773-8fd3-9c34f39e6e73",
      "name": "Google Gemini Chat Model4",
      "credentials": {
        "googlePalmApi": {
          "id": "0qx7MVBn4PpeYK6I",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a medical assistant AI responsible for preparing urgent notification emails to doctors when a post-surgery patient shows signs that may need immediate medical attention.\n\nInput data:\n- Patient name: {{ $('Telegram Trigger').item.json.message.from.first_name }}\n- Patient message: \"{{ $('Telegram Trigger').item.json.message.text }}\"\n- Message intensity:  {{ $('Code1').item.json.intensity }} (values: low, moderate, high)\n\nYour task:\nGenerate a **formal, professional email** that will be sent to the patient's assigned doctor (at {{ $json.doctor_email }}).\n\nThe email must:\n1. Clearly state who the patient is\n2. Summarize the concern based on their message\n3. Link the concern to the surgery (do not go beyond surgery context)\n4. Specify the **intensity** level of the concern\n5. Politely request the doctor to review the situation and respond if needed\n6. Be concise, respectful, and medically relevant\n\nThe email must have:\n- A subject line appropriate to the urgency\n- A brief intro\n- A clear summary of the issue\n- A respectful closing\n\n⚠️ Do not fabricate medical details. Only use what's provided. Do not guess history. Focus only on the surgery type and message content.\n",
        "options": {
          "systemMessage": "for patients surgery type and doctors mail id check for google sheet\nalso use gmail to send mail to doctor"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        2520,
        -280
      ],
      "id": "e97bf2ae-ef95-4eaa-811c-45fe5653d568",
      "name": "AI Agent5"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2540,
        -60
      ],
      "id": "80e402f5-ea97-415d-be46-da6afc950db0",
      "name": "Google Gemini Chat Model5",
      "credentials": {
        "googlePalmApi": {
          "id": "0qx7MVBn4PpeYK6I",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg",
          "mode": "list",
          "cachedResultName": "patiants list",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qa6cQgdaxfA3qLW2ZRBB0uq2rrp3FoFr-RzUkMeyCsg/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        2820,
        40
      ],
      "id": "cb93c424-d3d7-4fb6-9169-ca1b0884db85",
      "name": "Get row(s) in sheet in Google Sheets4",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "5ewVvwFTLDlJ7YzJ",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        2960,
        40
      ],
      "id": "693414d4-2b23-49eb-aa94-759a00387838",
      "name": "Send a message in Gmail",
      "webhookId": "7ad5fcc0-9b07-42ff-bbed-037c5ed9a1d6",
      "credentials": {
        "gmailOAuth2": {
          "id": "NwY4EwMpJMKDZsrm",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 6b922bcb-5d1b-493b-956c-f94c66c7aa0c"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"assistantId\": \"b208b330-51f2-47a7-b3b1-3d73f3ab09b5\",\n  \"phoneNumberId\": \"694f09bf-a35a-4749-960b-a4e82e916344\",\n  \"customer\": {\n  \"number\": \"+919537805470\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2680,
        80
      ],
      "id": "93fd5155-346c-4170-8d66-e2c84e6d5a86",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('AI Agent').item.json.output }}\ncrete a event at calender and send message about it on telegrame\ncurrent date: {{ $now }}",
        "options": {
          "systemMessage": "you have to create a appointment to after 1-2 days and send a telegram msg informing them\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        2260,
        300
      ],
      "id": "78c6bd9d-ff94-4770-9897-4a37b35c2cf3",
      "name": "AI Agent6"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2260,
        460
      ],
      "id": "8cf41952-5c2f-4ce7-9167-300bd0ff6bcb",
      "name": "Google Gemini Chat Model6",
      "credentials": {
        "googlePalmApi": {
          "id": "0qx7MVBn4PpeYK6I",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "ymoradiya21@gmail.com",
          "mode": "list",
          "cachedResultName": "ymoradiya21@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        2540,
        560
      ],
      "id": "2faa85fa-faf6-4f84-be2b-1c1195c79760",
      "name": "Create an event in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "vpSFlwgfnY5p8aN5",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "5443133930",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTool",
      "typeVersion": 1.2,
      "position": [
        2380,
        560
      ],
      "id": "de96ada6-5e0d-4c74-bfd7-7816998349cd",
      "name": "Send a text message in Telegram",
      "webhookId": "c86f1b60-3dba-4324-a41a-4982c9c7c7a9",
      "credentials": {
        "telegramApi": {
          "id": "QpkbaVk6M2l95xNC",
          "name": "Telegram account"
        }
      }
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "AI Agent4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "feedback msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Send a text message4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet in Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Send a text message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet in Google Sheets1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "Send a text message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet in Google Sheets2": {
      "ai_tool": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "AI Agent3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message2": {
      "main": [
        [
          {
            "node": "AI Agent6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message3": {
      "main": [
        [
          {
            "node": "AI Agent5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet in Google Sheets3": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent4": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent5",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet in Google Sheets4": {
      "ai_tool": [
        [
          {
            "node": "AI Agent5",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Send a message in Gmail": {
      "ai_tool": [
        [
          {
            "node": "AI Agent5",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "ai_tool": [
        [
          {
            "node": "AI Agent5",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent6",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "AI Agent6",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message in Telegram": {
      "ai_tool": [
        [
          {
            "node": "AI Agent6",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ae21f7ff983ee929f98e8d7968bbd21b49d1a44f2e129169348ba847d37dd5ac"
  }
}